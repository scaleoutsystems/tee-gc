#!/bin/bash
set -e

# Parse args
service=$1
if [[ "$service" != "combiner" && "$service" != "reducer" ]]; then
    echo "Argument $1 is not valid."
    exit 1
fi

# Generate signing key
openssl genrsa -3 -out $service-key.pem 3072

# Generate gramine config files
gramine-manifest \
    -Dlog_level=debug \
    -Dentrypoint=/opt/conda/envs/default/bin/python3.8 \
    -Denv_home=/opt/conda/envs/default \
    fedn.manifest.template $service.manifest
gramine-sgx-sign --key $service-key.pem --manifest $service.manifest --output $service.manifest.sgx
gramine-sgx-get-token --output $service.token --sig $service.sig

# Start service
if [[ "$service" == "reducer" ]]; then
    gramine-sgx reducer /opt/conda/envs/default/bin/fedn run reducer -n reducer --init=/app/config/settings-reducer.yaml
elif [[ "$service" == "combiner" ]]; then
    gramine-sgx combiner /opt/conda/envs/default/bin/fedn run combiner -in /app/config/settings-combiner.yaml
fi